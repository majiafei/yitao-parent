
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    
    upstream tomcat2 {
          #server 192.168.221.100:8080;
          server 192.168.31.246:10010;
    }

    upstream search {
          #server 192.168.221.100:8080;
          server 192.168.31.246:10030;
    }
        
     server {
        listen       80;
        server_name  api.yitao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://tomcat2;
        }
        
        location /api/search {
            proxy_pass http://search;
        }
    }
    
        upstream manage {
          #server 192.168.221.100:8080;
          server 192.168.31.246:5000;
    }
    
     server {
        listen       80;
        server_name  manage.yitao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://manage;
        }
    }
    
   upstream image {
          server 192.168.221.100:8080;
    }
    
     server {
        listen       80;
        server_name  yitao.image.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://image;
        }
    }
    
       upstream upload {
          server 192.168.31.246:10020;
    }
    
     server {
        listen       80;
        server_name  image.yitao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://upload;
        }
    }
    
    
    upstream portal {
          server 192.168.31.246:7093;
    }   
    
    upstream detail {
          server 192.168.31.246:10040;
    }   
     server {
        listen       80;
        server_name  www.yitao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location /item {
           #如果文件不存在，就反向代理
           if (!-f $request_filename){
             proxy_pass http://detail;
             break; 
           }
        }
        location / {
            proxy_pass http://portal;
        }
    }
     server {
        listen       80;
        server_name  item.yitao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location /item {
           #如果文件不存在，就反向代理
           if (!-f $request_filename){
             proxy_pass http://detail;
             break; 
           }
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
